/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, MeshDistortMaterial } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useEffect } from 'react';

const filePath = window.location.href + '/models/AbstractSphere.glb'

export default function WobblyTorus(props) {
  const group = useRef()
  const { nodes } = useGLTF(filePath)
  const randomRotationOffset = Math.random() * 180

  useEffect(() => {
    // group.current.position.x = props.animationOffset[0] 
    // group.current.position.z = props.animationOffset[2]
    // group.current.rotation.x = randomRotationOffset
    // group.current.rotation.y = randomRotationOffset
    // group.current.rotation.z = randomRotationOffset
  });

  useFrame(({ clock }) => {
    const t = (1 + Math.sin(clock.getElapsedTime() * 1.5)) / 2
    group.current.position.y = (t / 3) + props.animationOffset[1]
    group.current.rotation.x = group.current.rotation.z += 0.007
  })

  return (
    <group  {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        position={[6, 2, 0]}
        ref={group}
      >
        <torusKnotBufferGeometry args={[.5, 0.25, 128, 32]} />
        <MeshDistortMaterial
          color={props.color}
          smoothShading

          roughness={0}
          metalness={1}

          distort={.1}
          speed={1}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload(filePath)
